import {Work} from "@/interfaces/Work";

export const works: Array<Work> = [
    {
        id: '0',
        image: '/images/works/vniikr.png',
        title: 'Фитопланшет (Desktop)',
        description: 'Портал для хранения, создания и изменения справочников относящихся к ФГБУ “Всероссийский центр карантина растений”. Портал включает в себя несколько модулей. Основной функционал портала предназначен для автоматизации создания требований и решений на основе законодательных документов, касающихся экспорта и импорта растений. Другой раздел помогает в автоматизации процесса отслеживания состояния посевов различных культур. Третий модуль представляет собой хранилище документов. Портал находится в закрытом контуре и используется сотрудниками ВНИИКР для составления документов, на основании которых формируется информация о подкарантинной продукции и сорных растениях, которая далее используется в мобильных приложениях PWA.',
        explanation: 'При создании портала использовался фреймворк React и менеджер состояний Redux. Проект реализован с использованием TypeScript и препроцессора SCSS. Сложность реализации заключалась в правильном построении хранилища данных, поэтому использовалась нормализация хранилища. Также при разработке применялись библиотеки, такие как react-tabs, useForm, RTK и другие. Портал содержит много таблиц для взаимодействия со справочниками, каждая таблица имеет пагинацию, для реализации таблиц использовалась библиотека React Suite. Для портала написан собственный UIkit.',
        tags: [
            {
                name: 'react',
                color: '#377DB7'
            },
            {
                name: 'redux',
                color: '#00C7A3'
            },
            {
                name: 'scss',
                color: '#C3296A'
            },
            {
                name: 'restapi',
                color: '#915EFF'
            }
        ]
    },
    {
        id: '1',
        image: '/images/works/vniikr.png',
        title: 'PWA Фитопланшет (Mobile)',
        description: 'PWA приложение для работников ФГБУ “Всероссийский центр карантина растений”, для быстрого и удобного поиска необходимой подкарантинной продукции без доступа к сети интернет. Приложение содержит в себе информацию о разрешённых и запрещённых растения для импорта и экспорта. Документы в формате PDF для просмотра информации о карантинной продукции, а также список карантинно фитосанитарных зон.',
        explanation: 'Для кросплатформенности и работы приложения в офлайн режиме было принято решение использовать технологию PWA. Для хранения данных использовалась база данных SQL Lite, которая хранится в IndexedDB, данные из неё извлекаются с помощью sql.js с использованием WebAssembly. Пользователь взаимодействует с формой, на основании которой строится SQL выражение. Документы PDF также хранятся в БД, для открытия документов используется библиотека PDF.js. При наличии сети интернет можно использовать голосовой поиск, для более корректного поиска применяется алгоритм Левенштейна, написанный на js и работающий в офлайн режиме.',
        tags: [
            {
                name: 'react',
                color: '#377DB7'
            },
            {
                name: 'scss',
                color: '#C3296A'
            },
            {
                name: 'restapi',
                color: '#915EFF'
            },
            {
                name: 'webassembly',
                color: '#00C7A3'
            },
            {
                name: 'PWA',
                color: '#C1CE2C'
            }
        ]
    },
    {
        id: '2',
        image: '/images/works/vniikr.png',
        title: 'PWA Сорные растения (Mobile)',
        description: 'PWA приложение для работников ФГБУ “Всероссийский центр карантина растений”, для внесения записей о состоянии посевов. Приложение содержит в себе информацию о существующих посевах, культурах, агентах заражения, фенофазах. Сотрудники, исследуют посевы и заносят записи о состоянии посевов на текущий момент. Приложение работает как в офлайн, так и в онлайн режиме.',
        explanation: 'Для кросплатформенности и работы приложения в офлайн режиме было принято решение использовать технологию PWA. Для хранения данных использовалась база данных SQL Lite, которая хранится в IndexedDB, данные из неё извлекаются с помощью sql.js с использованием WebAssembly. Sql.js реализует полную поддержку CRUD операций, что позволяет гибко оперировать с данными. Пользователь для работы получает справочную информацию, на основании которой вносит свои наблюдения по конкретному посеву. По завершению работы, данные приложения синхронизуются с данными бекенда.',
        tags: [
            {
                name: 'react',
                color: '#377DB7'
            },
            {
                name: 'scss',
                color: '#C3296A'
            },
            {
                name: 'restapi',
                color: '#915EFF'
            },
            {
                name: 'webassembly',
                color: '#00C7A3'
            },
            {
                name: 'PWA',
                color: '#C1CE2C'
            }
        ]
    },
    {
        id: '3',
        image: '/images/works/vniikr.png',
        title: 'AI Фитопланшет (Desktop)',
        description: 'Усовершенствованная версия одного из модулей портала “Фитопланшет”. В данный модуль были внедрены технологии искусственного интеллекта для автоматизации построения документов, на основании которых формируется информация о подкарантинной продукции, которая далее используется в мобильном приложении PWA.',
        explanation: 'Портал содержит в себе интерфейс для добавления нормативных документов в формате doc/docx, которые в дальнейшем обрабатываются искусственным интеллектом и размечаются специальным образом. Для контроля блокировки документа и непрерывного отображения статусов документов применяется протокол передачи данных websocket. После обработки документа пользователь взаимодействует с ним в редакторе, похожем на Word, для этого применяется библиотека TinyMCE, которая содержит богатый функционал для редактирования текста в браузере.',
        tags: [
            {
                name: 'react',
                color: '#377DB7'
            },
            {
                name: 'scss',
                color: '#C3296A'
            },
            {
                name: 'websocket',
                color: '#915EFF'
            },
            {
                name: 'tinymce',
                color: '#00C7A3'
            }
        ]
    },
    {
        id: '4',
        image: '/images/works/mk.png',
        title: 'ТС УЧЁТ',
        description: 'Портал для сотрудников “ФЦМК”. Предназначен для выполнения различных задач, среди которых оповещения сотрудников, отчёты в BI системе, отчёты по данным, управление различной справочной информацией, документооборот, менеджер задач, инцидент-менеджмент, отслеживание обстановки на интерактивной карте, логирование сервисов и мониторинг систем.',
        explanation: 'В проекте используется MobX в связке с паттерном MVVM, что позволило построить удобную, гибкую и легко масштабируемую frontend архитектуру приложения. Для интеграции некоторых отдельно-независимых модулей используется подход микрофронтенда. Портал содержит много таблиц, которые имеют большой функционал, для их реализации используется AGGrid. Для непрерывного оповещения сотрудников используется протокол websocket. Для автоматической генерации необходимых папок и файлов используется генератора кода Hygen, который позволил сократить время, затрачиваемое на разработку. В проекте присутствует встроенный модуль BI, который реализован на Apache Superset с кастомной сборкой и настройкой. Другой встроенный модуль необходимый для создания отчётности и документации реализован с помощью ПО Stimulsoft. Ещё одним модулем является интерактивная карта, на которой отображается обстановка по ЧС в реальном времени, для реализации данного функционала используется API Яндекс карт. Для оптимизации бандла в проекте используется Lazy загрузка компонентов. Для составления триггеров на оповещение пользователей портала используеются библиотека Blockly. Также в проекте присутствует ролевая модель, где каждый пользователь имеет свои собственные права доступа.',
        tags: [
            {
                name: 'react',
                color: '#377DB7'
            },
            {
                name: 'mobx',
                color: '#00C7A3'
            },
            {
                name: 'scss',
                color: '#C3296A'
            },
            {
                name: 'websocket',
                color: '#915EFF'
            },
            {
                name: 'hygen',
                color: '#00C7A3'
            },
            {
                name: 'mvvm',
                color: '#377DB7'
            },
            {
                name: 'mui',
                color: '#C3296A'
            },
            {
                name: 'tinymce',
                color: '#915EFF'
            },
            {
                name: 'aggrid',
                color: '#C1CE2C'
            },
            {
                name: 'superset',
                color: '#00C7A3'
            },
            {
                name: 'blockly',
                color: '#377DB7'
            },
            {
                name: 'stimulsoft',
                color: '#00C7A3'
            },
            {
                name: 'yandexmap',
                color: '#C1CE2C'
            },
            {
                name: 'proxy',
                color: '#C3296A'
            },
        ]
    },
    {
        id: '5',
        image: '/images/works/infomed.png',
        title: 'Ивастрамед',
        description: 'Сайт медицинского центра “Ивастрамед”, который расположен в городе Иваново. Предназначен для поиска необходимого специалиста, осуществления записи на приём, просмотра актуальных новостей клиники.',
        explanation: 'Основным требованием заказчика была возможность вносить изменения на сайт без помощи сторонних специалистов. Для соблюдения данного требования, было принято решение использовать CMS систему, в качестве которой выступает “1С-Битрикс: Управление сайтом”. По макету, полученному от дизайнера, был свёрстан каркас сайта, который затем “натягивался” на CMS с помощью PHP. Также была произведена полная настройка административной части сайта, установлены необходимые инфоблоки и сформирована структура. По результатам работы заказчик получил готовый сайт, который успешно администрируется специально обученным сотрудником центра “Ивастрамед”.',
        tags: [
            {
                name: 'js',
                color: '#377DB7'
            },
            {
                name: 'php',
                color: '#00C7A3'
            },
            {
                name: 'битрикс',
                color: '#C3296A'
            },
            {
                name: 'cms',
                color: '#915EFF'
            }
        ],
        link: 'https://infomed.ru/'
    },
    {
        id: '6',
        image: '/images/works/sportnoise.png',
        title: 'Sportnoise',
        description: 'Сайт для Digital студии, на котором можно узнать список услуг предоставляемых студией, договорится об обсуждении своего проекта, а также посмотреть внушительный список выполненных работ.',
        explanation: 'Мне были предоставлены исходники сайта на Next.js, которые имели свои недостатки и проблемы. Проводился рефакторинг кода, фикс багов и добавление новых фич, например, отправка писем с помощью nodemailer. Была проведена полная оптимизация работы сайта. Также я выполнял деплой на хостинге заказчика, проводил настройку конфигурации nginx, деплой самого приложения next.js, добавление SSL сертификатов.',
        tags: [
            {
                name: 'nextjs',
                color: '#377DB7'
            },
            {
                name: 'nodemailer',
                color: '#00C7A3'
            },
            {
                name: 'nginx',
                color: '#C3296A'
            },
            {
                name: 'tailwind',
                color: '#915EFF'
            }
        ],
        link: 'https://sportnoise.ru/'
    },
    {
        id: '7',
        image: '/images/works/lab.png',
        title: 'New Products Lab',
        description: 'Портал предназначен для отображения отчётности этапов проведения строительных работ. Включает в себя пользовательскую и административную часть сайта для внесения изменений.',
        explanation: 'В проекте используется связка MobX и паттерна MVVM. Система стилей построена с помощью библиотеки tailwind. Используется фоновая подгрузка изображений на стороне клиента, для более быстрого отображения картинок. В качестве UI библиотеки используется PrimeReact, которая имеет богатый функционал подходящий под нужды проекта.',
        tags: [
            {
                name: 'react',
                color: '#377DB7'
            },
            {
                name: 'mobx',
                color: '#00C7A3'
            },
            {
                name: 'scss',
                color: '#C3296A'
            },
            {
                name: 'primereact',
                color: '#915EFF'
            }
        ]
    },
    {
        id: '8',
        image: '/images/works/asbc.png',
        title: 'Виджеты',
        description: 'PWA приложение для просмотра общей отчётности компании “АСБК” в виде наглядных графиков и таблиц.',
        explanation: 'Производил поддержку приложения, которое реализовано на  javascript с использованием библиотеки Jquery. В качестве библиотеки для отображения графиков используется HighCharts. Добавлял новые виды графиков, добавлял новые фичи в уже существующие графики, перевёл приложение с Chrome App в PWA.',
        tags: [
            {
                name: 'react',
                color: '#377DB7'
            },
            {
                name: 'jquery',
                color: '#00C7A3'
            },
            {
                name: 'hightcharts',
                color: '#C3296A'
            }
        ]
    },
    {
        id: '9',
        image: '/images/works/project-management.png',
        title: 'Управление проектами',
        description: 'Дипломная работа в бакалавриате. Приложение для управления проектами. Возможность постановки задач, отслеживания прогресса выполнения, составление отчётности, имеется встроенный модуль поддержки принятия решений.',
        explanation: 'Реализовал frontend и backend части приложения. Frontend был написан с помощью фреймворка Angular, а backend на языке программирования C#. В качестве ORM использовал фреймворк Entity Framework. В качестве базы данных использовал PostgreSQL. Для рассчёта алгоритмов в модуле поддержки принятия решений использовал matlab. Безопасность приложения основана на jwt.',
        tags: [
            {
                name: 'angular',
                color: '#377DB7'
            },
            {
                name: 'c#',
                color: '#00C7A3'
            },
            {
                name: 'postgresql',
                color: '#C3296A'
            },
            {
                name: 'jwt',
                color: '#C1CE2C'
            }
        ],
        github: 'https://github.com/bashtblrkin/ProjectManagement'
    }
]